nameserver=10.112.178.138:9876
broker=10.115.5.137:10910
consumer=127.0.0.1:59072
producer=192.168.0.110:9876
version=79

## 34 Client向Client发送心跳，并注册自身 这个 producer和consumer 都会向broker发送
extField_34={"clientID":"10.2.144.15@16142","consumerDataSet":[],"producerDataSet":[{"groupName":"CLIENT_INNER_PRODUCER"},{"groupName":"hushengdong_uat_producer_group"}]}
body_34={}

# -------- 以下内容都是发送给 nameserver 的报文

## 100 向Namesrv追加KV配置
extField_100={"namespace":"hushengdong","key":"10.2.144.16","value":"sweetip"}
body_100=

## 101 查看nameserver的KV配置
extField_101={"namespace":"hushengdong","key":"10.2.144.15"}
body_101={}

## 102 delete nameserver的KV配置
extField_102={"namespace":"hushengdong","key":"10.2.144.15"}
body_102={}

## 103 注册一个Broker，数据都是持久化的，如果存在则覆盖配置
extField_103={"brokerId":"0","clusterName":"DefaultCluster","brokerAddr":"10.2.144.15:10911","haServerAddr":"10.2.144.15:10912","brokerName":"hushengdong"}
body_103={}

## 104 卸载一个Broker，数据都是持久化的
extField_104={"brokerId":"0","clusterName":"DefaultCluster","brokerAddr":"10.2.144.15:10911","haServerAddr":"10.2.144.15:10912","brokerName":"hushengdong"}
body_104={}

## 105 根据Topic获取Broker Name、队列数(包含读队列与写队列)
extField_105={"topic":"hushengdong_uat1"}
body_105={}

## 106 查询所有注册到Broker集群信息
extField_106={}
body_106={}

## 205 擦除指定broker的写权限 用于摘除某一个broker
extField_205={"brokerName":"hushengdong"}
body_205={}

## 206 从nameserver 查询 完整Topic列表
extField_206={}
body_206={}

## 216 从nameserver删除Topic配置
extField_216={"topic":"jisdjifjiwejr"}
body_216={}

##  217 通过 project 查询所有的 server ip 信息
extField_217={"namespace":"hushengdong","key":"greet body"}
body_217={}

##  218 通过 project 删除所有的 server ip 信息
extField_218={"namespace":"hushengdong","key":"greet body"}
body_218={}

## 219 通过NameSpace 查询 所有的KV List
extField_219={"namespace":"hushengdong"}
body_219={}

## 224 查询 指定集群下的所有 topic
extField_224={"cluster":"hushengdong"}
body_224={}

## 304 查询 所有系统内置 topic 列表
extField_304={}
body_304={}

## 311 查询 单元逻辑下的所有 topic 列表
extField_311={}
body_311={}

## 312 查询 含有单元化订阅组的 Topic 列表
extField_312={}
body_312={}

## 313 查询 含有单元化订阅组的非单元化 Topic 列表
extField_313={}
body_313={}

# -------- 以上内容都是发送给 nameserver 的报文

# -------- 以下内容都是发送给 broker 的报文

## 39 Broker 主动向Producer回查事务状态 TODO
extField_39={"tranStateTableOffset":0,"commitLogOffset":123,"msgId":123,"transactionId":12345}
body_39={}

## 10 Broker 发送消息
extField_10={"bornTimestamp":0,"defaultTopic":"hushengdong_uat","defaultTopicQueueNums":6,"flag":"0","producerGroup":"pbanban","properties":"","queueId":"0","reconsumeTimes":"0","sysFlag":"0","topic":"hushengdong_uat","unitMode":"false"}
body_10=this is a message body10

## 310 Broker 发送消息，优化网络数据包
extField_310={"a":"pbanban","b":"hushengdong_uat","c":"TBW102","d":"4","e":"2","f":"0","g":"1636262266709","h":"0","i":"KEYS123456","j":"0","k":"false"}
body_310=this is a message body

## 11 Broker 订阅消息
extField_11={"queueId":"3","maxMsgNums":"32","sysFlag":"3","suspendTimeoutMillis":"15000","commitOffset":"54","topic":"hushengdong_uat","queueOffset":"54","subVersion":"1636261837174","consumerGroup":"hushengdong_uat_producer_group"}
body_11=
flag_11=0

## 12 Broker 根据 key 和时间戳 查询消息
extField_12={"topic":"hushengdong_uat","key":"12345624","maxNum":10,"beginTimestamp":1636268400,"endTimestamp":1636272000}
body_12=

## 14 Broker 查询Consumer Offset
extField_14={"queueId":"0","topic":"hushengdong_uat","consumerGroup":"hushengdong_uat_producer_group"}
body_14=

## 15 Broker 更新Consumer Offset
extField_15=:{"queueId":"0","commitOffset":"0","topic":"%RETRY%hushengdong_uat_producer_group","consumerGroup":"hushengdong_uat_producer_group"}
body_15=this is a message body

## 38 Broker 通过GroupName 查询 ConsumerId列表
extField_38={"consumerGroup":"hushengdong_uat_producer_group"}
body_38=
## 38号请求响应的数据格式如下注册一个Broker： {"consumerIdList":["192.168.0.110@13780"]}


## 33 Broker 根据消息ID来查询消息
extField_33={"offset":973140888}
body_33=

## 35 Broker Client注销
extField_35={"clientID":"123@12345","producerGroup":"test","consumerGroup":"test"}
body_35=

### 还有一些消息，是用来管理broker的

## 17 更新创建Topic
extField_17={"topic":"topic_to_create2","defaultTopic":"","readQueueNums":1,"writeQueueNums":1,"perm":6,"topicFilterType":"SINGLE_TAG","topicSysFlag":0,"order":1}
body_17=

## 215 更新创建Topic
extField_215={"topic":"topic_to_create"}
body_215=

## 21 Broker 获取所有Topic的配置（Slave和Namesrv都会向Master请求此配置）
extField_21=
body_21=

## 25 Broker 更新 Broker 上的配置 这个就是properties上的配置
extField_25=
body_25=

## 26 Broker 获取Broker上的配置
extField_26={"version":300}

## 28  Broker 获取Broker运行时信息
extField_28=

## 29 Broker 根据时间查询队列的Offset
extField_29={"topic":"hushengdong_uat","queueId":0,"timestamp":1636272000}

## 30 Broker 查询队列最大Offset
extField_30={"topic":"hushengdong_uat","queueId":0}

## 31 Broker 查询队列最小Offset
extField_31={"topic":"hushengdong_uat","queueId":0}

## 32 Broker 查询队列最早消息对应时间
extField_32={"topic":"hushengdong_uat","queueId":0}

## 41 Broker Consumer向Master锁定队列
body_41={"consumerGroup":"hushengdong_uat_producer_group","clientId":"","mqSet":["1234","123687"]}

## 42 Broker Consumer向Master解锁队列
extField_42={"topic":"hushengdong_uat","queueId":0}

## 200 更新并创建消费组
body_200={"groupName":"hushengdong_consumer_group","consumeEnable":false,"consumeFromMinEnable":false,"consumeBroadcastEnable":false,"retryQueueNums":100,"retryMaxTimes":100,"brokerId":0,"whichBrokerWhenConsumeSlowly":1}

## 201 获取所有的消费组配置
body_201=

## 202 统计信息，获取Topic统计信息
extField_202={"topic":"hushengdong_uat"}

## 203 获取消费者的连接链表
extField_203={"consumerGroup":"hushengdong_uat_consumer"}

## 获取生产者的连接链表
extField_204={"producerGroup":"hushengdong_consumer_group"}

## 从Broker获取消费状态（进度）
extField_208={"consumerGroup":"alamein_delivery_to_es_uat","topic":"alamein_delivery_to_es_uat"}

## ker 获取所有Consumer Offset
extField_43=

## Broker 获取所有定时进度
extField_45=

## 调用客户端重置 offset
extField_222={"group":"hushengdong_uat_consumer","topic":"hushengdong_uat","timestamp":1636272000,"isForce":false}

## 通知 broker 调用客户端订阅消息处理
extField_223={"group":"hushengdong_consumer_group","topic":"hushengdong_uat","clientAddr":"192.168.1.1:23065"}

## Broker 查询topic被谁消费
extField_300={"topic":"hushengdong_uat"}

## 向Broker注册Filter Server
extField_301={"filterServerAddr":""}

##根据 topic 和 group 获取消息的时间跨度
extField_303={"group":"hushengdong_consumer_group","topic":"hushengdong_uat"}

## 从broker获取所有系统内置 Topic 列表
extField_305=

## 清理失效队列
extField_306=

## 通过Broker查询Consumer内存数据 这可以调用203来查询所有的在线consumer
extField_307={"consumerGroup":"hushengdong_uat_producer_group","clientId":"127.0.0.1:13780","jstackEnable":true}

## 查找被纠正的 offset
extField_308={"compareGroup":"hushengdong_consumer_group","topic":"hushengdong_uat","filterGroups":""}

## 通过Broker直接向某个Consumer发送一条消息，并立刻消费，返回结果给broker，再返回给调用方
extField_309={"consumerGroup":"hushengdong_consumer_group","clientId":"127.0.0.1:13780","msgId":"","brokerName":""}

## 克隆某一个组的消费进度到新的组
extField_314={"srcGroup":"hushengdong_consumer_group","destGroup":"hushengdong_consumer_group_new","topic":"hushengdong_uat","offline":true}

## 查看Broker上的各种统计信息 BrokerStatsManager看这个类
## TOPIC_PUT_NUMS
## TOPIC_PUT_SIZE
## GROUP_GET_NUMS
## GROUP_GET_SIZE
## SNDBCK_PUT_NUMS
## BROKER_PUT_NUMS
## BROKER_GET_NUMS
extField_315={"statsName":"","statsKey":""}

## 发送死信队列
extField_316={"topic":"hushengdong_uat"}

## 207 从Broker删除订阅组
extField_207={"groupName":"hushengdong_uat_consumer"}
# -------- 以上内容都是发送给 broker 的报文

## -target=2 0nameserver 1broker 2consumer 3producer

## 40 Broker Broker通知Consumer列表变化 这个报文是不能被模拟发送的
extField_40={"consumerGroup":"hushengdong_uat_producer_group"}
body_40={}

## 221 查看客户端消费组的消费情况
extField_221={"topic":"hushengdong_uat","group":"hushengdong_uat_consumer","clientAddr":"10.2.144.15:59072"}